@model AuthViewModel
@{
    ViewData["Title"] = "Home Page";
}
<style>
    button img {
        max-width: 40px;
        margin: 6px;
    }

    #migrationContainer div {
        margin: 32px;
    }

    #migrationStatus {
        min-width: 400px;
        min-height: 200px;
    }
</style>
<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Sign in with Trakt and Plex below to begin import.</p>
    <div>
        @if (string.IsNullOrEmpty(Model.TraktKey))
        {
            <a href="@ViewData["TraktUrl"]">
                <button>
                    <img src="/img/trakt.png" />
                    <span>Log in with Trakt</span>
                </button>
            </a>
        }
        else
        {
            <a href="/Home/TraktLogout">
                <button>
                    <img src="/img/trakt.png" />
                    <span>Log out</span>
                </button>
            </a>
        }
        @if (string.IsNullOrEmpty(Model.PlexKey))
        {
            <a href="/Home/PlexLogin">
                <button>
                    <img src="/img/plex.png" />
                    <span>Log in with Plex</span>
                </button>
            </a>
        }
        else
        {
            <a href="/Home/PlexLogout">
                <button>
                    <img src="/img/plex.png" />
                    <span>Log out</span>
                </button>
            </a>
        }
    </div>
    @if (!string.IsNullOrEmpty(Model.PlexKey))
    {
        using (Html.BeginForm("SavePlexKey", "Home"))
        {
            <div style="display: inline-block; vertical-align: middle">
                @using (Html.BeginForm("SavePlexKey", "Home", null, FormMethod.Post))
                {
                    <div>Plex Key (<a href="https://support.plex.tv/articles/204059436-finding-an-authentication-token-x-plex-token/" target="_blank">Instructions on how to find it</a>)</div>
                    @Html.EditorFor(m => m.PlexServerKey)
                    <div><button type="submit">Save</button></div>
                }
            </div>
        }
    }
    @if (!string.IsNullOrEmpty(Model.TraktKey) && !string.IsNullOrEmpty(Model.PlexKey))
    {
        <div id="migrationContainer">
            @Html.HiddenFor(m => m.TraktKey)
            @Html.HiddenFor(m => m.PlexKey)

            @using (Html.BeginForm("GetJsonConfig", "Home", null, FormMethod.Post))
            {
                <div>
                    <p>Choose Plex Server</p>
                    <select id="PlexServer" asp-items="Model.PlexServers"></select>
                </div>
                @if (!string.IsNullOrEmpty(Model.PlexServerKey))
                {
                    <div>
                        <button onclick="startMigration();">Start Migration</button>
                        <div>
                            <textarea id="migrationStatus" readonly>Ready</textarea>
                        </div>
                    </div>

                    <div>

                        <div><button type="submit">Download config</button></div>

                    </div>
                }
            }
            <script src="~/lib/signalr/dist/browser/signalr.js"></script>
            <script src="~/js/migration.js"></script>
        </div>
    }
</div>